<Window x:Class="SubnetCalculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Subnet Calculator"
        Width="1180" Height="860"
        MinWidth="1000" MinHeight="700"
        Background="{DynamicResource BgBrush}"
        Foreground="{DynamicResource FgBrush}">

    <!--──────────────── theme brushes & shared styles ────────────────-->
    <Window.Resources>

        <!-- runtime brushes supplied by ApplyTheme in code-behind -->
        <!-- BgBrush  CtrlBg  FgBrush  SelBg  AltBg -->
        <CornerRadius x:Key="Corner4">4</CornerRadius>

        <!-- right-align helper -->
        <Style x:Key="RightCell" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="TextAlignment"      Value="Right"/>
        </Style>

        <!-- Button -->
        <Style TargetType="Button">
            <Setter Property="Background"  Value="{DynamicResource CtrlBg}"/>
            <Setter Property="Foreground"  Value="{DynamicResource FgBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource FgBrush}"/>
            <Setter Property="Padding"     Value="24 8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="{StaticResource Corner4}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBox -->
        <Style TargetType="TextBox">
            <Setter Property="Background"  Value="{DynamicResource CtrlBg}"/>
            <Setter Property="Foreground"  Value="{DynamicResource FgBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource FgBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding"     Value="4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource Corner4}">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- CheckBox text -->
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="{DynamicResource FgBrush}"/>
        </Style>

        <!-- DataGrid headers -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background"  Value="{DynamicResource CtrlBg}"/>
            <Setter Property="Foreground"  Value="{DynamicResource FgBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BgBrush}"/>
        </Style>

        <!-- DataGrid CELL – full-row highlight -->
        <Style x:Key="CellHighlight" TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground"  Value="{DynamicResource FgBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BgBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SelBg}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="DataGridRow.IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SelBg}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- DataGrid ROW -->
        <Style x:Key="RowHighlight" TargetType="DataGridRow">
            <Setter Property="Background" Value="{DynamicResource CtrlBg}"/>
            <Setter Property="Foreground" Value="{DynamicResource FgBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SelBg}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- TabItem -->
        <Style TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border x:Name="Bd" Padding="6 3"
                                Background="{DynamicResource CtrlBg}"
                                CornerRadius="{StaticResource Corner4}"
                                BorderBrush="{DynamicResource BgBrush}" BorderThickness="1">
                            <ContentPresenter ContentSource="Header"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource BgBrush}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <DockPanel>

        <!-- theme toggle -->
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top"
                    HorizontalAlignment="Right" Margin="0 0 0 6">
            <CheckBox x:Name="ThemeCheck"
                      Content="Light mode"
                      IsChecked="False"
                      Checked="ThemeChanged"
                      Unchecked="ThemeChanged"/>
        </StackPanel>

        <TabControl Background="{DynamicResource BgBrush}">

            <!--════════ TAB 1 – Fixed-size ════════-->
            <TabItem Header="Fixed-size">
                <Grid Margin="12">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- inputs -->
                    <StackPanel Orientation="Horizontal" Margin="0 0 0 10">
                        <StackPanel Margin="0 0 18 0">
                            <TextBlock FontWeight="SemiBold">Starting network</TextBlock>
                            <TextBox x:Name="StartNetworkBox" Width="190"/>
                        </StackPanel>
                        <StackPanel Margin="0 0 18 0">
                            <TextBlock FontWeight="SemiBold">Min subnets</TextBlock>
                            <TextBox x:Name="MinSubnetsBox" Width="90"/>
                        </StackPanel>
                        <StackPanel Margin="0 0 18 0">
                            <TextBlock FontWeight="SemiBold">Min hosts (per subnet)</TextBlock>
                            <TextBox x:Name="MinHostsBox" Width="110"/>
                        </StackPanel>
                        <StackPanel Margin="0 0 18 0">
                            <TextBlock FontWeight="SemiBold">Mask / CIDR (optional)</TextBlock>
                            <TextBox x:Name="MaskBox" Width="150"/>
                        </StackPanel>

                        <CheckBox x:Name="Allow31CheckBox"
                              Content="Allow /31"
                              VerticalAlignment="Bottom"/>

                        <Button Content="Calculate"
                            Click="OnCalculateFixed"
                            Margin="24 0 0 0"
                            VerticalAlignment="Bottom"/>
                    </StackPanel>

                    <!-- summary -->
                    <Border Grid.Row="1" Background="{DynamicResource CtrlBg}"
                        CornerRadius="{StaticResource Corner4}" Padding="8">
                        <TextBlock x:Name="SummaryFixed" FontWeight="SemiBold"/>
                    </Border>

                    <!-- result grid -->
                    <DataGrid x:Name="ResultGridFixed"
                          Grid.Row="2" Margin="0 8"
                          AutoGenerateColumns="False"
                          IsReadOnly="True"
                          CanUserAddRows="False"
                          SelectionMode="Single" SelectionUnit="FullRow"
                          MouseDoubleClick="OnCopyCell"
                          RowStyle="{StaticResource RowHighlight}"
                          CellStyle="{StaticResource CellHighlight}"
                          Background="{DynamicResource CtrlBg}"
                          RowBackground="{DynamicResource CtrlBg}"
                          AlternatingRowBackground="{DynamicResource AltBg}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="#"        Binding="{Binding Index}"      Width="65"  ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="Network"  Binding="{Binding Network}"    Width="180" ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="CIDR"     Binding="{Binding Prefix}"     Width="70"  ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="Wildcard" Binding="{Binding Wildcard}"   Width="130" ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="First"    Binding="{Binding FirstHost}"  Width="160" ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="Last"     Binding="{Binding LastHost}"   Width="160" ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="Broadcast" Binding="{Binding Broadcast}"  Width="160" ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="Mask"     Binding="{Binding Mask}"       Width="160" ElementStyle="{StaticResource RightCell}"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <!-- buttons -->
                    <StackPanel Orientation="Horizontal"
                            Grid.Row="3"
                            HorizontalAlignment="Right" Margin="0 6 0 0">
                        <Button Content="Copy ACL"    Click="OnCopyAclFixed"   Margin="0 0 8 0"/>
                        <Button Content="Export CSV"  Click="OnExportCsvFixed" Margin="0 0 8 0"/>
                        <Button Content="Export JSON" Click="OnExportJsonFixed"/>
                    </StackPanel>
                </Grid>
            </TabItem>

            <!--════════ TAB 2 – VLSM ════════-->
            <TabItem Header="VLSM">
                <Grid Margin="12">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- toolbar -->
                    <StackPanel Orientation="Horizontal" Margin="0 0 0 10">
                        <TextBlock VerticalAlignment="Center" FontWeight="SemiBold">Starting network:</TextBlock>
                        <TextBox x:Name="VlsmStartBox" Width="200" Margin="8 0 0 0"/>

                        <TextBlock VerticalAlignment="Center" FontWeight="SemiBold" Margin="25 0 0 0">Mask / CIDR (optional):</TextBlock>
                        <TextBox x:Name="VlsmMaskBox" Width="150" Margin="8 0 0 0"/>

                        <Button Content="Add row"      Click="OnAddRequest"     Margin="30 0 0 0"/>
                        <Button Content="Remove row"   Click="OnRemoveRequest"  Margin="8 0 0 0"/>
                        <Button Content="Calculate"    Click="OnCalculateVlsm"  Margin="30 0 0 0"/>
                        <Button Content="Import CSV"   Click="OnImportCsvVlsm"  Margin="40 0 0 0"/>
                        <Button Content="Import JSON"  Click="OnImportJsonVlsm" Margin="8 0 0 0"/>
                        <Button Content="Import CLI"   Click="OnImportCliVlsm"  Margin="8 0 0 0"/>
                    </StackPanel>

                    <!-- request grid -->
                    <DataGrid x:Name="RequestGrid"
                          Grid.Row="1" Margin="0 0 0 10"
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          SelectionMode="Single" SelectionUnit="FullRow"
                          MouseDoubleClick="OnCopyCell"
                          RowStyle="{StaticResource RowHighlight}"
                          CellStyle="{StaticResource CellHighlight}"
                          Background="{DynamicResource CtrlBg}"
                          RowBackground="{DynamicResource CtrlBg}"
                          AlternatingRowBackground="{DynamicResource AltBg}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Label"        Binding="{Binding Label}"        Width="150"/>
                            <DataGridTextColumn Header="Min hosts"    Binding="{Binding Hosts}"        Width="90"  ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="Force prefix" Binding="{Binding ForcePrefix}"  Width="90"  ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="Interface"    Binding="{Binding Interface}"    Width="130"/>
                            <DataGridTextColumn Header="Notes"        Binding="{Binding Notes}"        Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <!-- summary -->
                    <Border Grid.Row="2" Background="{DynamicResource CtrlBg}"
                        CornerRadius="{StaticResource Corner4}" Padding="8" Margin="0 6">
                        <TextBlock x:Name="SummaryVlsm" FontWeight="SemiBold"/>
                    </Border>

                    <!-- allocations grid -->
                    <DataGrid x:Name="ResultGridVlsm"
                          Grid.Row="3" Margin="0 4"
                          AutoGenerateColumns="False"
                          IsReadOnly="True"
                          CanUserAddRows="False"
                          EnableRowVirtualization="True"
                          SelectionMode="Single" SelectionUnit="FullRow"
                          MouseDoubleClick="OnCopyCell"
                          RowStyle="{StaticResource RowHighlight}"
                          CellStyle="{StaticResource CellHighlight}"
                          Background="{DynamicResource CtrlBg}"
                          RowBackground="{DynamicResource CtrlBg}"
                          AlternatingRowBackground="{DynamicResource AltBg}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="#"        Binding="{Binding Index}"     Width="55"  ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="Label"    Binding="{Binding Label}"     Width="120"/>
                            <DataGridTextColumn Header="Intf"     Binding="{Binding Interface}" Width="110"/>
                            <DataGridTextColumn Header="Network"  Binding="{Binding Network}"   Width="170" ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="CIDR"     Binding="{Binding Prefix}"    Width="60"  ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="Wildcard" Binding="{Binding Wildcard}"  Width="120" ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="Hosts"    Binding="{Binding HostCount}" Width="80"  ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="First"    Binding="{Binding FirstHost}" Width="145" ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="Last"     Binding="{Binding LastHost}"  Width="145" ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="Broadcast" Binding="{Binding Broadcast}" Width="145" ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="Mask"     Binding="{Binding Mask}"      Width="145" ElementStyle="{StaticResource RightCell}"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <!-- buttons -->
                    <StackPanel Orientation="Horizontal"
                            Grid.Row="4"
                            HorizontalAlignment="Right" Margin="0 6 0 0">
                        <Button Content="Copy ACL"    Click="OnCopyAclVlsm"    Margin="0 0 8 0"/>
                        <Button Content="Export CSV"  Click="OnExportCsvVlsm"  Margin="0 0 8 0"/>
                        <Button Content="Export JSON" Click="OnExportJsonVlsm" Margin="0 0 8 0"/>
                        <Button Content="Export CLI"  Click="OnExportCliVlsm"/>
                    </StackPanel>
                </Grid>
            </TabItem>

            <!--════════ TAB 3 – IPv6 ════════-->
            <TabItem Header="IPv6">
                <Grid Margin="12">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal" Margin="0 0 0 10">
                        <TextBlock VerticalAlignment="Center" FontWeight="SemiBold">Starting network:</TextBlock>
                        <TextBox x:Name="Ipv6StartBox" Width="320" Margin="8 0 0 0"/>

                        <TextBlock VerticalAlignment="Center" FontWeight="SemiBold" Margin="25 0 0 0">Prefix (optional):</TextBlock>
                        <TextBox x:Name="Ipv6MaskBox" Width="80" Margin="8 0 0 0"/>

                        <Button Content="Add row"      Click="OnAddRequest6"   Margin="30 0 0 0"/>
                        <Button Content="Remove row"   Click="OnRemoveRequest6" Margin="8 0 0 0"/>
                        <Button Content="Calculate"    Click="OnCalculateIpv6" Margin="30 0 0 0"/>
                    </StackPanel>

                    <DataGrid x:Name="RequestGrid6"
                          Grid.Row="1" Margin="0 0 0 10"
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          SelectionMode="Single" SelectionUnit="FullRow"
                          MouseDoubleClick="OnCopyCell"
                          RowStyle="{StaticResource RowHighlight}"
                          CellStyle="{StaticResource CellHighlight}"
                          Background="{DynamicResource CtrlBg}"
                          RowBackground="{DynamicResource CtrlBg}"
                          AlternatingRowBackground="{DynamicResource AltBg}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Label"     Binding="{Binding Label}"     Width="150"/>
                            <DataGridTextColumn Header="Prefix"    Binding="{Binding Prefix}"    Width="80" ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="Interface" Binding="{Binding Interface}" Width="130"/>
                            <DataGridTextColumn Header="Notes"     Binding="{Binding Notes}"     Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <Border Grid.Row="2" Background="{DynamicResource CtrlBg}" CornerRadius="{StaticResource Corner4}" Padding="8" Margin="0 6">
                        <TextBlock x:Name="SummaryIpv6" FontWeight="SemiBold"/>
                    </Border>

                    <DataGrid x:Name="ResultGridIpv6"
                          Grid.Row="3" Margin="0 4"
                          AutoGenerateColumns="False"
                          IsReadOnly="True"
                          CanUserAddRows="False"
                          EnableRowVirtualization="True"
                          SelectionMode="Single" SelectionUnit="FullRow"
                          MouseDoubleClick="OnCopyCell"
                          RowStyle="{StaticResource RowHighlight}"
                          CellStyle="{StaticResource CellHighlight}"
                          Background="{DynamicResource CtrlBg}"
                          RowBackground="{DynamicResource CtrlBg}"
                          AlternatingRowBackground="{DynamicResource AltBg}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="#"      Binding="{Binding Index}"     Width="55"  ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="Label"  Binding="{Binding Label}"     Width="120"/>
                            <DataGridTextColumn Header="Intf"   Binding="{Binding Interface}" Width="110"/>
                            <DataGridTextColumn Header="Network" Binding="{Binding Network}"  Width="280" ElementStyle="{StaticResource RightCell}"/>
                            <DataGridTextColumn Header="Prefix" Binding="{Binding Prefix}"   Width="80"  ElementStyle="{StaticResource RightCell}"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <StackPanel Orientation="Horizontal" Grid.Row="4" HorizontalAlignment="Right" Margin="0 6 0 0">
                        <Button Content="Export CSV"  Click="OnExportCsvIpv6"  Margin="0 0 8 0"/>
                        <Button Content="Export JSON" Click="OnExportJsonIpv6"/>
                    </StackPanel>
                </Grid>
            </TabItem>

        </TabControl>
    </DockPanel>
</Window>
